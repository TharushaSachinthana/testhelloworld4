name: Security and Code Quality Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint and Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run linter (example for JS/TS)
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run lint || echo "No lint script found"
          else
            echo "No package.json found, skipping lint"
          fi

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    needs: lint
    if: |
      github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Check for supported code
        id: codeql-check
        run: |
          if ls *.js *.ts *.py 1> /dev/null 2>&1; then
            echo "::set-output name=run_codeql::true"
          else
            echo "::set-output name=run_codeql::false"
          fi
      - uses: github/codeql-action/init@v3
        if: steps.codeql-check.outputs.run_codeql == 'true'
        with:
          languages: 'javascript,python'
      - uses: github/codeql-action/analyze@v3
        if: steps.codeql-check.outputs.run_codeql == 'true'

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    needs: codeql
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/dependency-review-action@v4

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    needs: dependency-review
    steps:
      - uses: actions/checkout@v4
      - uses: trufflesecurity/trufflehog@v3

  license-check:
    name: License Check
    runs-on: ubuntu-latest
    needs: secret-scan
    steps:
      - uses: actions/checkout@v4
      - uses: pilosus/action-license-checker@v1

  bandit:
    name: Python Security (Bandit)
    runs-on: ubuntu-latest
    needs: license-check
    steps:
      - uses: actions/checkout@v4
      - name: Run Bandit
        run: |
          if [ -f requirements.txt ]; then
            pip install bandit
            bandit -r .
          else
            echo "No requirements.txt found, skipping Bandit"
          fi

  trivy:
    name: Trivy Vulnerability Scanner
    runs-on: ubuntu-latest
    needs: bandit
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy FS scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          exit-code: 0
